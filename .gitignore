#include<iostream.h>
#include<stdio.h>
#include <stdlib.h>
#include <time.h>

using namespace std;
class Point{
 protected:
        double x;
        double y;
 public:
        double getx() {return x;}
        double gety() {return y;}
        void set_x(double x){
             x=x;
        }
        void set_y(double y){
             y=y;
        }
        Point (double x , double y); 
        Point ();             
};
class Rectangle : public Point{
      
 private:
        Point tr;
        Point bl;    
 public:
       Rectangle (Point bl, Point tr);
       Rectangle();
       void set_tr(Point x){
             tr=x;
       }
       void set_bl(Point y){
             bl=y;
       } 
       Point get_tr() {return tr;}
       Point get_bl() {return bl;}       

       bool point_check(Point point)
            {
            bool check;             
            Rectangle cordinate;
            double x_point,x_tr,x_bl,y_point,y_bl,y_tr;            
            x_point=getx();
            x_tr=cordinate.tr.getx();
            x_bl=cordinate.bl.getx();
            y_point=gety();
            y_tr=cordinate.tr.gety();
            y_bl=cordinate.bl.gety();
            if(x_bl <= x_point){
                 check=true;
                 }            
            else if (x_tr >= x_point ) {
                 check=true;
                 }
            else check= false;
            if(y_bl <= y_point){
                 check=true;
                 }
            else if (y_tr >= y_point ) {
                 check=true;
                 }
            else check= false;            
            return check;
            }
       Rectangle compare(Rectangle rect1 , Rectangle rect2){
             Rectangle mixed_rectangle;
             double compare_tr1 , compare_bl1 ,compare_tr2 , compare_bl2; 
             bool check;       
             compare_tr1=rect1.tr.getx();
             compare_tr2=rect2.tr.getx(); 
             if (compare_tr1> compare_tr2){
                              mixed_rectangle.tr.set_x(compare_tr2);
                                           }
             else mixed_rectangle.tr.set_x(compare_tr1);
             compare_tr1=rect1.tr.gety();
             compare_tr2=rect2.tr.gety();
             if (compare_tr1> compare_tr2){
                              mixed_rectangle.tr.set_y(compare_tr2);
                                           }
             else mixed_rectangle.tr.set_y(compare_tr1);
             compare_bl1=rect1.bl.getx();                             
             compare_bl2=rect2.bl.getx(); 
             if (compare_bl1> compare_bl2){
                              mixed_rectangle.bl.set_x(compare_bl1);
                                           }
             else mixed_rectangle.bl.set_x(compare_bl1);
             compare_bl1=rect1.bl.gety();                             
             compare_bl2=rect2.bl.gety();              
             if (compare_bl1> compare_bl2){
                              mixed_rectangle.bl.set_y(compare_bl1);
                                           }
             else mixed_rectangle.bl.set_y(compare_tr2); 
             return mixed_rectangle;                       
             
             }     
};
       

int main(){
 Rectangle rect , rect2 , rect3 ;
 Point point;
 int i;
 double x,y;
 bool check;
 Rectangle();
 switch ( i ) {
        
 case 1:
  cout >> "vuvedi kordinati na top rigt">>endl;
  cin << x;
  cin << y;
  rect1.tr.set_x(x);
  rect1.tr.set_y(y);
  cout >> "vuvedi kordinati na bottom left">>endl;
  cin << x;
  cin << y;
  rect1.bl.set_x(x);
  rect1.bl.set_y(y);  
   break;
 case 2:
  cout >> "vuvedi kordinati na tochka za proverka left">>endl;
  cin << x;
  cin << y;
  point.set_x(x);
  point.set_y(y);
  check=point_check(point);
  if (check == true){cout >> "tochkata e v pravougulnika"}
  else {cout>>"tochkata ne e v pravougulnika" }
  
   break;
 case 3:
   
   break;   

default:

  break;
}   
    
 return 0;   
}
 

int main(){
    
    
 return 0;   
}
